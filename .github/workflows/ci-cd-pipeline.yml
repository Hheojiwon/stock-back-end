name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v2

      # JDK 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'

      # Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Gradle 빌드 실행
      - name: Build with Gradle
        run: ./gradlew build

      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t investement-backend .

      # SSH를 통해 EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 13.125.177.110  # 퍼블릭 IPv4 주소
          username: ec2-user    # EC2 사용자 이름 (예: ec2-user, ubuntu)
          key: ${{ secrets.EC2_SSH_KEY }}  # GitHub Secrets에 등록한 SSH 개인 키
          port: 22
          script: |
            docker stop investement-backend || true
            docker rm investement-backend || true
            docker pull investement-backend:latest
            docker run -d -p 8080:8080 --name investement-backend investement-backend:latest
